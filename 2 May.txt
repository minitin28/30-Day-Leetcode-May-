May 2: 
Problem :
You're given strings J representing the types of stones that are jewels, and S representing the stones you have.  Each character in S is a type of stone you have.  You want to know how many of the stones you have are also jewels.

The letters in J are guaranteed distinct, and all characters in J and S are letters. Letters are case sensitive, so "a" is considered a different type of stone from "A".
Example:


Solution:
class Solution {
    public int numJewelsInStones(String J, String S) {
        String[] Jparts = J.split("");
        String[] Sparts = S.split("");
        int count = 0;
        for(int i = 0 ; i < Jparts.length ; i++)
        {
            for(int j = 0 ; j < Sparts.length ;j++)
            {
                if(Jparts[i].equals(Sparts[j]))
                {
                    count++;
                }
            }
        }
        return count;
        
    }
}

o/p: Success
Time complexity: O(N^2)
Space Complexity : O(1)


Explanation:
Use split() method to extract characters.
equals() should be used while comparing strings or characters.