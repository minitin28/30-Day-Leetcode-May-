Problem Statement : 
Given a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.

Examples:

s = "leetcode"
return 0.

s = "loveleetcode",
return 2.
Note: You may assume the string contain only lowercase letters.

Java Code:

class Solution {
    public int firstUniqChar(String s) {
        int[] arr = new int[26];
        int count = 0;
        for(char c:s.toCharArray())
        {
            arr[c-'a']++;
        }
        for(char c : s.toCharArray())
        {
            
            if(arr[c-'a'] == 1)
                return count;
            else
                count++;
        }
        
        return -1;
    }
    
}

T(O) - O(n)
S(O) - O(1)
