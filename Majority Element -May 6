Problem Statement : 
Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3
Example 2:

Input: [2,2,1,1,1,2,2]
Output: 2

Java Code :
class Solution {
    public int majorityElement(int[] nums) {
        int count = 0;
        int majority = 0;
        for(int n : nums)
        {
            if(count==0)
                majority = n;
            if(n == majority)
                count++;
            else
                count--;
        }
        return majority;
    }
}

T(o) : O(N)
S(o) : O(1)
